<?php
{{namespace}}
{{modelFqcn}}
{{entityFqcn}}

interface {{model}}RepositoryInterface
{
    /**
     * Create entity object from array of data

     * @param  array  $data         Array of entity data

     * @return {{entityFqcn}}       Entity object
     */
    public function entityFactory(array $data) //:{{entityClass}};

    /**
     * Find records by id.
     *
     * @param  integer  $id     The record id
     *
     * @return {{entityFqcn}}   Entity object of the specified record
     */
    public function findById($id) //:{{entityClass}};

    /**
     * Create new record based on given entity.
     *
     * @param  array    $data   The data need to be created
     *
     * @return {{model}}          The generated model
     * @throws Exception        Exception thrown if operation failed
     */
    public function create(array $data);

    /**
     * Update specific record related to given model
     *
     * @param  integer  $id     The id of the model
     * @param  array    $data   The model object need to be updated.
     *
     * @return {{entityClass}}  The updated model
     * @throws Exception        Exception thrown if operation failed
     */
    public function update({{entityClass}} $entity);

    /**
     * Delete records by id.
     *
     * @param  integer  $id     The record id
     *
     * @return bool             Return true on success
     * @throws Exception        Exception thrown if operation failed
     */
    public function delete($id);

    /**
     * Create a query to be consumed by datatable library.
     */
    public function createDatatableQuery();
}
