<?php
namespace {{namespace}};

use {{entity_fqcn}};

interface {{entity_class}}RepositoryInterface
{
    /**
     * Find all available records.
     *
     * @return iterable<{{entity_fqcn}}>
     */
    public function findAll(); #:iterable

    /**
     * Find all available records by page.
     *
     * @return iterable<{{entity_fqcn}}>
     */
    public function findAllByPage($page); #:iterable

    /**
     * Find records by id.
     *
     * @param  integer  $id     The record id
     *
     * @return {{entity_fqcn}}
     */
    public function findById($id); #:{{entity_class}}

    /**
     * Count all available records
     *
     * @return int
     */
    public function count(); #:int

    /**
     * Create new entity object based on given data.
     *
     * @param  array    $data   The entity data need to be created
     *
     * @return {{entity_class}}
     */
    public function entityFactory(array $data); #:{{entity_class}}

    /**
     * Persist entity into persitent storage
     *
     * @param  {{entity_fqcn}}  $entity     The entity object
     *
     * @return {{entity_fqcn}}              The updated entity
     * @throws Exception                    Exception thrown if operation failed
     */
    public function save({{entity_class}} $entity); #:{{entity_class}}

    /**
     * Remove entity from the persistent storage.
     *
     * @param  {{entity_fqcn}}  $entity     The entity object
     *
     * @return boolean            Return true on success
     * @throws Exception          Exception thrown if operation failed
     */
    public function delete({{entity_class}} $entity); #:bool
}
